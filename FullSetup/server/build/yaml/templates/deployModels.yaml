# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
#
# Builds, deploys and train language models (LUIS, QnA Maker and Orchestrator)
#

parameters:
- name: sourceDirectory
  displayName: Directory to the source code in the build pipeline
  type: string

- name: yamlDirectory
  displayName: Directory to the yaml files in the build pipeline
  type: string

- name: botName
  displayName: Bot name
  type: string

- name: luisAuthoringKey
  displayName: LUIS authoring key
  type: string

- name: luisAuthoringRegion
  displayName: LUIS authoring region
  type: string

- name: qnaSubscriptionKey
  displayName: QnA Maker subscription key
  type: string

steps:
# Publish LUIS models if luisAuthoringKey is defined
- task: PowerShell@2
  displayName: "Publish LUIS"
  inputs:
    targetType: "filePath"
    filePath: "${{ parameters.yamlDirectory }}/templates/Build-LUIS.ps1"
    arguments: -outputDirectory ./generated -sourceDirectory ./ -crossTrainedLUDirectory ./generated/interruption -authoringKey ${{ parameters.luisAuthoringKey }} -authoringRegion ${{ parameters.luisAuthoringRegion }} -botName ${{ parameters.botName }} 
    # Note: the working directory needs to be set to the bot's source directory
    # to allow for the creation of relative paths in the generated config files.
    workingDirectory: ${{ parameters.sourceDirectory }}
  condition: and(succeeded(), ne(variables['luisAuthoringKey'], ''))

# Publish QnA Maker KBs if qnaSubscriptionKey is defined
- task: PowerShell@2
  displayName: "Publish QnA"
  inputs:
    targetType: "inline"
    script: |
      $sourceDirectory = "${{ parameters.sourceDirectory }}/generated/interruption"
      $outputDirectory = "${{ parameters.sourceDirectory }}/generated"
      
      # Build, train and publish the QnA maker models
      bf qnamaker:build --out $outputDirectory --in $sourceDirectory --subscriptionKey ${{ parameters.qnaSubscriptionKey }} --botName ${{ parameters.botName }} --suffix composer --force --log
  condition: and(succeeded(), ne(variables['qnaSubscriptionKey'], ''))

# Publish Orchestrator models
- task: PowerShell@2
  displayName: "Publish orchestrator"
  inputs:
    targetType: "filePath"
    filePath: "${{ parameters.yamlDirectory }}/templates/Build-Orchestrator.ps1"
    arguments: -outputDirectory ./generated -sourceDirectory ./ -crossTrainedLUDirectory ./generated/interruption -appSettingsFile ./settings/appsettings.json
    # Note: the working directory needs to be set to the bot's source directory
    # to allow for the creation of relative paths in the generated config files.
    workingDirectory: ${{ parameters.sourceDirectory }}
